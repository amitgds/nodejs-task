openapi: 3.1.0
info:
  title: Task Management APIs
  version: 1.0.0
servers:
  - url: http://localhost:8000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /task-management/:
    post:
      tags:
        - default
      summary: Create task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: This is my new hfkj ghdfkhgkjhdfkjh gkdfh gkfdtask
                description: This is task description for task id 40000
                due_date: '1999-12-26'
                status: pending
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - default
      summary: Get All tasks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /task-management/paginate:
    post:
      tags:
        - default
      summary: Get All tasks Paginated
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
        - name: short
          in: query
          schema:
            type: string
          example: due_date
        - name: order
          in: query
          schema:
            type: string
          example: asc
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /task-management/19:
    get:
      tags:
        - default
      summary: Get  task by Id
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - default
      summary: Update task by Id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: This is my updated task
                description: This is task description
                due_date: '1999-12-26'
                status: completed
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - default
      summary: Delete task by Id
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /task-management/filter:
    post:
      tags:
        - default
      summary: Filter tasks
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
          example: pending
        - name: due_date
          in: query
          schema:
            type: string
          example: '1999-12-26'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /task-management/19/assign:
    post:
      tags:
        - default
      summary: Assign task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /task-management/19/add-category:
    post:
      tags:
        - default
      summary: Add category
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                category: category
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /task-management/19/add-comment:
    post:
      tags:
        - default
      summary: Add Comment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment: good task
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/register:
    post:
      tags:
        - default
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Ram Pandey
                email: rampand5678ey@gmail.com
                password: Qweasz@321
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/login:
    post:
      tags:
        - default
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: rampandey@gmail.com
                password: Qweasz@321
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/refresh-token:
    post:
      tags:
        - default
      summary: Refresh Token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                refreshToken: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTc0ODQzMzc0NCwiZXhwIjoxNzQ5MDM4NTQ0fQ.wjS3M-lrPjAVkmFdlFG8A_zXWJGIN28oYLzoMqSbTjw
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/get-profile:
    post:
      tags:
        - default
      summary: Get Profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: rampandey@gmail.com
                password: Qweasz@321
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
